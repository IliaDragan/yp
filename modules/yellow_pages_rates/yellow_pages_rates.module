<?php
/**
 * @file
 * YellowPages currency rates module stub.
 */

 define('RATES_UPDATE_AT', 21600);

/**
 * Implements hook_block_info().
 */
function yellow_pages_rates_block_info() {
  $blocks = array();

  $blocks['yp_rates'] = array(
    'info' => 'YellowPages Currency Rates',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function yellow_pages_rates_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'yp_rates':
      $block['subject'] = t('Rates');
      $block['content'] = array(
        '#theme' => 'yp_rates',
      );
      break;
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function yellow_pages_rates_theme($existing, $type, $theme, $path) {
  $hooks = array();

  $hooks['yp_rates'] = array(
    'template' => 'yp_rates',
    'path' => $path . '/templates',
    'variables' => array(),
  );

  return $hooks;
}

/**
 * Implements hook_preprocess_THEME().
 */
function yellow_pages_rates_preprocess_yp_rates(&$variables) {
  $rates = yellow_pages_rates_fetch_rates();

  $variables['rates'] = $rates;
}

/**
 * Fetch today currency rates.
 *
 * @return array
 *   Set of currencies, keyed by currency type.
 */
function yellow_pages_rates_fetch_rates() {

  $url = 'http://bnm.md/ru/official_exchange_rates?get_xml=1&date=' . date('d.m.Y');

  $cid = md5('yp_rates');
  $cache = cache_get($cid);
  $rates = array();

  if (!$cache || REQUEST_TIME > $cache->expire) {
    try {
      $xml = new SimpleXMLElement(file_get_contents($url));

      if (isset($xml->Valute)) {
        foreach ($xml->Valute as $valute) {
          $rates[(string) $valute->CharCode] = array(
            'code' => (string) $valute->NumCode,
            'nominal' => (string) $valute->Nominal,
            'value' => (float) $valute->Value,
          );
        }

        cache_set($cid, $rates, 'cache', REQUEST_TIME + RATES_UPDATE_AT);
      }
    }
    catch (Exception $e) {
      watchdog_exception('yp_rates', $e);
    }
  }
  else {
    $rates = $cache->data;
  }

  $required = array('USD', 'EUR', 'RON', 'RUB');
  $filtered_rates = array();
  foreach ($required as $currency) {
    $filtered_rates[$currency] = $rates[$currency];
  }

  return $filtered_rates;
}
