<?php
/**
 * @file
 * Code for the Yellow Pages Solr configuration feature.
 */

include_once 'yellow_pages_solr_configuration.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function yellow_pages_solr_configuration_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implementation of hook_form_alter()
 */
function yellow_pages_solr_configuration_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'search_block_form') {
    $uri = arg();
    if ($uri[0] === 'search') {
      $form['search_block_form']['#default_value'] = $uri[2];
    }
    $form['#submit'][] = 'yellow_pages_solr_configuration_form_submit';
  }
}

/**
 * Process a block search form submission.
 */
function yellow_pages_solr_configuration_form_submit($form, &$form_state) {
  // The search form relies on control of the redirect destination for its
  // functionality, so we override any static destination set in the request,
  // for example by drupal_access_denied() or drupal_not_found()
  // (see http://drupal.org/node/292565).
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  $form_id = $form['form_id']['#value'];
  $form_state['redirect'] = 'search/companies/'. trim($form_state['values'][$form_id]);
}

/**
 * Implements hook_translated_menu_link_alter().
 *
 * IMPORTANT: this code assumes taxonomy_menu is used and it already marked shop
 * category items as altered.
 */
/**
 * Implements hook_translated_menu_link_alter().
 */
function yellow_pages_solr_configuration_translated_menu_link_alter(&$item, $map) {
  if ($item['menu_name'] == 'menu-product-menu' && strpos($item['link_path'], 'taxonomy/term/') === 0) {
    $p = 'search/companies';
    $tid = arg(2, $item['link_path']);
    $item['href'] = url($p, array('absolute' => TRUE)) . '?f[0]=field_products%3A' . $tid;
  }
}
